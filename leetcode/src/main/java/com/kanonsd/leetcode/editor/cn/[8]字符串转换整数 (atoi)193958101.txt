class Solution {
    public int myAtoi(String s) {
        char[] atoiArray = s.toCharArray();
        StringBuilder atoi = new StringBuilder(32);

        for (int i = 0; i < atoiArray.length ; i++) {
            char c = atoiArray[i];
            // 空格过滤
            if (c == 0x20){
                continue;
            }else if ((0x41<=c && c<=0x5A) || (0x61<=c && c<=0x7A) || c == 0x2E){
                break;
            }else if ((c == 0x2B || c== 0x2D) && atoi.length()==0){
                atoi.append(c);
            }else if (c == 0x2B || c== 0x2D){
                break;
            }else if (c == 0x30 && (atoi.length()==0 ||
                    (atoi.charAt(0)==0x2B || atoi.charAt(0)==0x2D))){
                continue;
            }else{
                atoi.append(c);
            }

        }
        if (atoi.length()==0 ||
                (atoi.length()==1 && (atoi.charAt(0)==0x2B || atoi.charAt(0)==0x2D) )){
            return 0;
        }
        if (atoi.charAt(0)>=0x30 && atoi.charAt(0)<=0x39){
            atoi.insert(0,'+');
        }
        String max = ""+Integer.MAX_VALUE,min = ""+Integer.MIN_VALUE, v =atoi.toString();
        if (atoi.length() > 11){
            return atoi.charAt(0)==0x2B?Integer.MAX_VALUE:Integer.MIN_VALUE;
        } else if (atoi.length() == 11 && (v.compareTo(max) >0 || v.compareTo(min)>0) ){
            return atoi.charAt(0)==0x2B?Integer.MAX_VALUE:Integer.MIN_VALUE;
        }
        return Integer.parseInt(atoi.toString());
    }
}

//total_testcases:1082
//total_correct:42
//input_formatted:"00000-42a1234"
//expected_output:0
//code_output:-42
